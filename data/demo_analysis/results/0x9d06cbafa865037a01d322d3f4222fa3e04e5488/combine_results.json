{"contract": "0x9d06cbafa865037a01d322d3f4222fa3e04e5488", "sourceLanguage": "Solidity", "analysis": {"46": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "ire(tokens_buy > 0);\n\n      "}, "fullDescription": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "name": "OtherVulnerability"}], "48": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "s,uint256)\")),owner, msg.sender,tokens_buy)){\n        \treturn false;\n        }\n\n        ui"}, "fullDescription": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "name": "ReentrancyVulnerability"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1339\n", "name": "OtherVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in Delta.tokens_buy (/data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-59):\n\t-! c.call(bytes4(sha3()(transferFrom(address,address,uint256))),owner,msg.sender,tokens_buy) /data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#48-52\n", "name": "UncheckedLowCallsVulnerability"}], "57": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "\n\n      //Withdra"}, "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}], "69": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "nge token\n      fun"}, "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}], "39": [{"level": "note", "tool": ["slither"], "fullDescription": "Low level call in Delta.tokens_buy (/data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-59):\n\t-! c.call(bytes4(sha3()(transferFrom(address,address,uint256))),owner,msg.sender,tokens_buy) /data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#48-52\n", "name": "UncheckedLowCallsVulnerability"}], "54": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "DenialServiceVulnerability"}]}, "listLine": [46, 48, 57, 69, 39, 54], "rules": [{"id": "Other_9", "fullDescription": {"text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "}, "name": "OtherVulnerability", "shortDescription": {"text": "Exception state"}}, {"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "Other_10", "fullDescription": {"text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 1339\n"}, "name": "OtherVulnerability", "shortDescription": {"text": "Multiple Calls"}}, {"id": "UncheckedLowCalls_3", "fullDescription": {"text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "Unchecked CALL return value"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in Delta.tokens_buy (/data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#39-59):\n\t-! c.call(bytes4(sha3()(transferFrom(address,address,uint256))),owner,msg.sender,tokens_buy) /data/demo_analysis/source_code/0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol#48-52\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "DenialService_2", "name": "DenialServiceVulnerability", "shortDescription": {"text": "Callstack Depth Attack Vulnerability."}}]}