{"contract": "etherbank", "sourceLanguage": "Solidity", "analysis": {"21": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "msg.sender.call.value(amountToWithdraw)()"}, "fullDescription": "In the function `withdrawBalance()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "name": "AccessControlVulnerability"}, {"level": "warning", "tool": ["mythril", "slither", "oyente"], "fullDescription": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Deprecated standard detected @ /data/access_control/source_code/etherbank.sol#21:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n", "name": "IgnoreVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in EtherBank.withdrawBalance (/data/access_control/source_code/etherbank.sol#18-23):\n\t-! (msg.sender.call.value(amountToWithdraw)()) /data/access_control/source_code/etherbank.sol#21\n", "name": "UncheckedLowCallsVulnerability"}], "22": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "userBalances[msg.sender] = 0"}, "fullDescription": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "name": "ReentrancyVulnerability"}], "18": [{"level": "error", "tool": ["slither"], "fullDescription": "Reentrancy in EtherBank.withdrawBalance (/data/access_control/source_code/etherbank.sol#18-23):\n\tExternal calls:\n\t- ! (msg.sender.call.value(amountToWithdraw)()) (/data/access_control/source_code/etherbank.sol#21)\n\tState variables written after the call(s):\n\t- userBalances (/data/access_control/source_code/etherbank.sol#22)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "EtherBank.getBalance (/data/access_control/source_code/etherbank.sol#10-12) should be declared external\n", "name": "IgnoreVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in EtherBank.withdrawBalance (/data/access_control/source_code/etherbank.sol#18-23):\n\t-! (msg.sender.call.value(amountToWithdraw)()) /data/access_control/source_code/etherbank.sol#21\n", "name": "UncheckedLowCallsVulnerability"}], "10": [{"level": "note", "tool": ["slither"], "fullDescription": "EtherBank.getBalance (/data/access_control/source_code/etherbank.sol#10-12) should be declared external\n", "name": "IgnoreVulnerability"}], "14": [{"level": "note", "tool": ["slither"], "fullDescription": "EtherBank.getBalance (/data/access_control/source_code/etherbank.sol#10-12) should be declared external\n", "name": "IgnoreVulnerability"}], "7": [{"level": "note", "tool": ["slither"], "snippet": {"text": "^0.4.0"}, "fullDescription": "Detected issues with version pragma in /data/access_control/source_code/etherbank.sol:\n\t- pragma solidity^0.4.0 (/data/access_control/source_code/etherbank.sol#7): it allows old versions\n", "name": "IgnoreVulnerability"}]}, "listLine": [21, 22, 18, 10, 14, 7], "rules": [{"id": "AccessControl_13", "fullDescription": {"text": "In the function `withdrawBalance()` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions."}, "name": "AccessControlVulnerability", "shortDescription": {"text": "Ether send"}}, {"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "Reentrancy_4", "fullDescription": {"text": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "State change after external call"}}, {"id": "Reentrancy_10", "fullDescription": {"text": "Reentrancy in EtherBank.withdrawBalance (/data/access_control/source_code/etherbank.sol#18-23):\n\tExternal calls:\n\t- ! (msg.sender.call.value(amountToWithdraw)()) (/data/access_control/source_code/etherbank.sol#21)\n\tState variables written after the call(s):\n\t- userBalances (/data/access_control/source_code/etherbank.sol#22)\n"}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "reentrancy-eth"}}, {"id": "Ignore_8", "fullDescription": {"text": "Deprecated standard detected @ /data/access_control/source_code/etherbank.sol#21:\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n"}, "name": "IgnoreVulnerability", "shortDescription": {"text": "deprecated-standards"}}, {"id": "Ignore_11", "fullDescription": {"text": "EtherBank.getBalance (/data/access_control/source_code/etherbank.sol#10-12) should be declared external\n"}, "name": "IgnoreVulnerability", "shortDescription": {"text": "external-function"}}, {"id": "Ignore_17", "fullDescription": {"text": "Detected issues with version pragma in /data/access_control/source_code/etherbank.sol:\n\t- pragma solidity^0.4.0 (/data/access_control/source_code/etherbank.sol#7): it allows old versions\n"}, "name": "IgnoreVulnerability", "shortDescription": {"text": "solc-version"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in EtherBank.withdrawBalance (/data/access_control/source_code/etherbank.sol#18-23):\n\t-! (msg.sender.call.value(amountToWithdraw)()) /data/access_control/source_code/etherbank.sol#21\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "Reentrancy_6", "name": "ReentrancyVulnerability", "shortDescription": {"text": "Re-Entrancy Vulnerability."}}]}