INFO:Slither:Compilation warnings/errors on /data/demo_analysis/source_code/lucky_doubler.sol:
/data/demo_analysis/source_code/lucky_doubler.sol:33:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:142:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (multi < 110 || multi > 150) throw;
                                        ^---^
/data/demo_analysis/source_code/lucky_doubler.sol:149:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/data/demo_analysis/source_code/lucky_doubler.sol:95:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        Entry theEntry = entries[unpaidEntries[index]];
        ^------------^
/data/demo_analysis/source_code/lucky_doubler.sol:60:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(msg.value);
             ^------------------------^
/data/demo_analysis/source_code/lucky_doubler.sol:74:10: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        	msg.sender.send(msg.value - 1 ether);
        	^----------------------------------^
/data/demo_analysis/source_code/lucky_doubler.sol:102:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            theEntry.entryAddress.send(payout);
            ^--------------------------------^
/data/demo_analysis/source_code/lucky_doubler.sol:116:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint fees = this.balance - balance;
                    ^----------^
/data/demo_analysis/source_code/lucky_doubler.sol:119:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                owner.send(fees);
                ^--------------^
/data/demo_analysis/source_code/lucky_doubler.sol:33:5: Warning: No visibility specified. Defaulting to "public". 
    function LuckyDoubler() {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:53:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:130:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        uint256 hashVal = uint256(block.blockhash(lastBlockNumber));
                                  ^-------------^
/data/demo_analysis/source_code/lucky_doubler.sol:137:5: Warning: No visibility specified. Defaulting to "public". 
    function changeOwner(address newOwner) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:141:5: Warning: No visibility specified. Defaulting to "public". 
    function changeMultiplier(uint multi) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:147:5: Warning: No visibility specified. Defaulting to "public". 
    function changeFee(uint newFee) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:155:5: Warning: No visibility specified. Defaulting to "public". 
    function multiplierFactor() constant returns (uint factor, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:160:5: Warning: No visibility specified. Defaulting to "public". 
    function currentFee() constant returns (uint feePercentage, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:165:5: Warning: No visibility specified. Defaulting to "public". 
    function totalEntries() constant returns (uint count, string info) {
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:170:5: Warning: No visibility specified. Defaulting to "public". 
    function userStats(address user) constant returns (uint deposits, uint payouts, string info)
    ^ (Relevant source part starts here and spans across multiple lines).
/data/demo_analysis/source_code/lucky_doubler.sol:180:5: Warning: No visibility specified. Defaulting to "public". 
    function entryDetails(uint index) constant returns (address user, uint payout, bool paid, string info)
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Deprecated standard detected @ /data/demo_analysis/source_code/lucky_doubler.sol#130:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /data/demo_analysis/source_code/lucky_doubler.sol#142:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /data/demo_analysis/source_code/lucky_doubler.sol#149:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
LuckyDoubler.fallback (/data/demo_analysis/source_code/lucky_doubler.sol#53-55) should be declared external
LuckyDoubler.changeOwner (/data/demo_analysis/source_code/lucky_doubler.sol#137-139) should be declared external
LuckyDoubler.changeMultiplier (/data/demo_analysis/source_code/lucky_doubler.sol#141-145) should be declared external
LuckyDoubler.changeFee (/data/demo_analysis/source_code/lucky_doubler.sol#147-151) should be declared external
LuckyDoubler.multiplierFactor (/data/demo_analysis/source_code/lucky_doubler.sol#155-158) should be declared external
LuckyDoubler.currentFee (/data/demo_analysis/source_code/lucky_doubler.sol#160-163) should be declared external
LuckyDoubler.totalEntries (/data/demo_analysis/source_code/lucky_doubler.sol#165-168) should be declared external
LuckyDoubler.userStats (/data/demo_analysis/source_code/lucky_doubler.sol#170-178) should be declared external
LuckyDoubler.entryDetails (/data/demo_analysis/source_code/lucky_doubler.sol#180-188) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /data/demo_analysis/source_code/lucky_doubler.sol:
	- pragma solidity^0.4.0 (/data/demo_analysis/source_code/lucky_doubler.sol#9): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'LuckyDoubler.LuckyDoubler' (/data/demo_analysis/source_code/lucky_doubler.sol#33-35) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/data/demo_analysis/source_code/lucky_doubler.sol analyzed (1 contracts), 14 result(s) found