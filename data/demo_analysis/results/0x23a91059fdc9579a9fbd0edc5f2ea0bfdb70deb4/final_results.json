{"contract": "0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 4, "list_vulnerabilities": ["ReentrancyVulnerability", "OtherVulnerability", "UncheckedLowCallsVulnerability", "ArithmeticVulnerability"], "rules": [{"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "Other_10", "fullDescription": {"text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 768\n"}, "name": "OtherVulnerability", "shortDescription": {"text": "Multiple Calls"}}, {"id": "Arithmetic_4", "fullDescription": {"text": "A possible integer overflow exists in the function `Deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow"}}, {"id": "Reentrancy_10", "fullDescription": {"text": "Reentrancy in PrivateBank.CashOut (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#34-47):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#39-46)\n\tState variables written after the call(s):\n\t- balances (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#41)\n"}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "reentrancy-eth"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in PrivateBank.CashOut (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#34-47):\n\t-msg.sender.call.value(_am)() /data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#39-46\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "Arithmetic_12", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow."}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}, {"id": "Reentrancy_6", "name": "ReentrancyVulnerability", "shortDescription": {"text": "Re-Entrancy Vulnerability."}}, {"id": "Reentrancy_13", "name": "ReentrancyVulnerability", "shortDescription": {"text": "straw_man_contract"}}], "listLine": [39, 28, 29, 34, 61, 65, 38], "analysis": {"39": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "     {\n                balan"}, "fullDescription": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "name": "ReentrancyVulnerability"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 768\n", "name": "OtherVulnerability", "flag": "risk of false positives"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in PrivateBank.CashOut (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#34-47):\n\t-msg.sender.call.value(_am)() /data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#39-46\n", "name": "UncheckedLowCallsVulnerability"}], "41": [], "28": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "alue;\n            TransferLog.A"}, "fullDescription": "A possible integer overflow exists in the function `Deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}], "29": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "ender,msg.value,\"Deposit\");\n        }\n    }\n    \n    f"}, "fullDescription": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "name": "ReentrancyVulnerability"}], "34": [{"level": "error", "tool": ["slither"], "fullDescription": "Reentrancy in PrivateBank.CashOut (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#34-47):\n\tExternal calls:\n\t- msg.sender.call.value(_am)() (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#39-46)\n\tState variables written after the call(s):\n\t- balances (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#41)\n", "name": "ReentrancyVulnerability", "flag": "risk of false positives"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in PrivateBank.CashOut (/data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#34-47):\n\t-msg.sender.call.value(_am)() /data/demo_analysis/source_code/0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol#39-46\n", "name": "UncheckedLowCallsVulnerability"}], "61": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability", "flag": "risk of false positives"}], "65": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability", "flag": "risk of false positives"}], "38": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ReentrancyVulnerability"}]}, "count_vulnerabilities": {"ReentrancyVulnerability": 4, "OtherVulnerability": 1, "UncheckedLowCallsVulnerability": 2, "ArithmeticVulnerability": 2}, "count_leve_vulnerabilities": {"warning": 5, "error": 1, "note": 3, "none": 0}, "false_positives": 1}