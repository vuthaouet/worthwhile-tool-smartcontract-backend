{"contract": "0x89c1b3807d4c67df034fffb62f3509561218d30b", "sourceLanguage": "Solidity", "analysis": {"100": [{"level": "warning", "tool": ["mythril", "oyente"], "snippet": {"text": "32[] requestData) public payable returns (int) {\n        if (externalCallFlag) {\n            throw;\n        }\n\n        if (killswitch) {\n            externalCallFlag = true;\n            if (!msg.sender.call.value(msg.value)()) {\n                throw;\n            }\n            externalCallFlag = false;\n            return newVersion;\n        }\n\n        if (msg.value < MIN_FEE) {\n            externalCallFlag = true;\n            // If the amount of ether sent by the requester is too little or \n            // too much, refund the requester and discard the request.\n            if (!msg.sender.call.value(msg.value)()) {\n                throw;\n            }\n            externalCallFlag = false;\n            return FAIL_FLAG;\n        } else {\n            // Record the request.\n            uint64 requestId = requestCnt;\n            requestCnt++;\n            unrespondedCnt++;\n\n            bytes32 paramsHash = sha3(requestType, requestData);\n            requests[requestId].requester = msg.sender;\n            requests[requestId].fee = msg.value;\n            requests[requestId].callbackAddr = callbackAddr;\n            requests[requestId].callbackFID = callbackFID;\n            requests[requestId].paramsHash = paramsHash;\n\n            // Log the request for the Town Crier server to process.\n            RequestInfo(requestId, requestType, msg.sender, msg.value, callbackAddr, paramsHash, timestamp, requestData);\n            return requestId;\n        }\n    }\n\n    function deliver(uint64 requestId, bytes32 paramsHash, uint64 error, bytes32 respData) public {\n        if (msg.sender != SGX_ADDRESS"}, "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "warning", "tool": ["mythril", "oyente"], "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "warning", "tool": ["mythril", "oyente"], "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "warning", "tool": ["mythril", "oyente"], "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "error", "tool": ["slither"], "fullDescription": "Reentrancy in TownCrier.cancel (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#205-222):\n\tExternal calls:\n\t- ! msg.sender.call.value(fee - CANCELLATION_FEE)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#215-218)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#218)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "67": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "e(newAddr);\n "}, "fullDescription": "A possible integer underflow exists in the function `upgrade(address)`.\nThe subtraction may result in a value < 0.", "name": "ArithmeticVulnerability"}], "97": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "    }\n    }\n\n    function request(uint8 requestT"}, "fullDescription": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "name": "ReentrancyVulnerability"}], "168": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "  requests[requestId].fee = DELIVE"}, "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}], "172": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "    // Either no"}, "fullDescription": "A possible integer underflow exists in the function `upgrade(address)`.\nThe subtraction may result in a value < 0.", "name": "ArithmeticVulnerability"}], "173": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "t for its delive"}, "fullDescription": "A possible integer underflow exists in the function `upgrade(address)`.\nThe subtraction may result in a value < 0.", "name": "ArithmeticVulnerability"}], "179": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "D_LL_CALLS\n          "}, "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}, {"level": "warning", "tool": ["slither"], "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}], "184": [{"level": "note", "tool": ["mythril", "slither"], "snippet": {"text": "or the callback function\n        DeliverInfo(requestId, f"}, "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}, {"level": "warning", "tool": ["slither"], "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}, {"level": "warning", "tool": ["oyente"], "name": "ArithmeticVulnerability"}], "215": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "questId].fee, 1);\n            return SUCCESS_FL"}, "fullDescription": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "218": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "ender, requests[requestI"}, "fullDescription": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "name": "ReentrancyVulnerability"}], "110": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "false;\n            return newVersi"}, "fullDescription": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "115": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "      externalCallFlag ="}, "fullDescription": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "name": "ReentrancyVulnerability"}], "122": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "        return FAIL_FLAG;\n        "}, "fullDescription": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.", "name": "ReentrancyVulnerability"}], "125": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "uint64 requestId = reque"}, "fullDescription": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "name": "ReentrancyVulnerability"}], "131": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "g.value;\n            requests["}, "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}], "138": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "Id;\n        }\n    }\n\n    function deliver(uint64 requestId, bytes32 paramsHash, uint64 error, bytes32 respDa"}, "fullDescription": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}], "43": [{"level": "note", "tool": ["mythril"], "snippet": {"text": " public newVersion = 0;\n\n    /"}, "fullDescription": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "name": "OtherVulnerability"}], "205": [{"level": "error", "tool": ["slither"], "fullDescription": "Reentrancy in TownCrier.cancel (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#205-222):\n\tExternal calls:\n\t- ! msg.sender.call.value(fee - CANCELLATION_FEE)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#215-218)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#218)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "121": [{"level": "error", "tool": ["slither"], "snippet": {"text": "! msg.sender.call.value(msg.value)()"}, "fullDescription": "Reentrancy in TownCrier.cancel (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#205-222):\n\tExternal calls:\n\t- ! msg.sender.call.value(fee - CANCELLATION_FEE)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#215-218)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#218)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "144": [{"level": "warning", "tool": ["slither"], "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "185": [{"level": "warning", "tool": ["slither"], "snippet": {"text": "externalCallFlag = false"}, "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}], "192": [{"level": "warning", "tool": ["slither"], "snippet": {"text": "externalCallFlag = true"}, "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}, {"level": "warning", "tool": ["oyente"], "name": "DenialServiceVulnerability"}], "193": [{"level": "warning", "tool": ["slither"], "snippet": {"text": "requests[requestId].callbackAddr.call.gas(callbackGas)(requests[requestId].callbackFID,requestId,error,respData)"}, "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "202": [{"level": "warning", "tool": ["slither"], "snippet": {"text": "externalCallFlag = false"}, "fullDescription": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n", "name": "ReentrancyVulnerability"}], "93": [{"level": "note", "tool": ["slither"], "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "96": [{"level": "note", "tool": ["slither"], "snippet": {"text": "! requests[0].requester.call.value(this.balance)()"}, "fullDescription": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n", "name": "UncheckedLowCallsVulnerability"}], "169": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability"}], "65": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability"}], "164": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability"}], "186": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability"}], "162": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "DenialServiceVulnerability"}], "180": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "DenialServiceVulnerability"}], "94": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ReentrancyVulnerability"}]}, "listLine": [100, 67, 97, 168, 172, 173, 179, 184, 215, 218, 110, 115, 122, 125, 131, 138, 43, 205, 121, 144, 185, 192, 193, 202, 93, 96, 169, 65, 164, 186, 162, 180, 94], "rules": [{"id": "Arithmetic_4", "fullDescription": {"text": "A possible integer overflow exists in the function `request(uint8,address,bytes4,uint256,bytes32[])`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow"}}, {"id": "Arithmetic_5", "fullDescription": {"text": "A possible integer underflow exists in the function `upgrade(address)`.\nThe subtraction may result in a value < 0."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow"}}, {"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "UncheckedLowCalls_3", "fullDescription": {"text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "Unchecked CALL return value"}}, {"id": "Reentrancy_4", "fullDescription": {"text": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "State change after external call"}}, {"id": "Other_9", "fullDescription": {"text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "}, "name": "OtherVulnerability", "shortDescription": {"text": "Exception state"}}, {"id": "Reentrancy_10", "fullDescription": {"text": "Reentrancy in TownCrier.cancel (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#205-222):\n\tExternal calls:\n\t- ! msg.sender.call.value(fee - CANCELLATION_FEE)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#215-218)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#218)\n"}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "reentrancy-eth"}}, {"id": "Reentrancy_9", "fullDescription": {"text": "Reentrancy in TownCrier.deliver (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#144-205):\n\tExternal calls:\n\t- requests[requestId].requester.call.gas(2300).value(fee)() (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#184-185)\n\tState variables written after the call(s):\n\t- externalCallFlag (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#185)\n"}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "reentrancy-benign"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in TownCrier.withdraw (/data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#93-100):\n\t-! requests[0].requester.call.value(this.balance)() /data/demo_analysis/source_code/0x89c1b3807d4c67df034fffb62f3509561218d30b.sol#96-100\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "Arithmetic_12", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow."}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}, {"id": "DenialService_2", "name": "DenialServiceVulnerability", "shortDescription": {"text": "Callstack Depth Attack Vulnerability."}}, {"id": "Reentrancy_6", "name": "ReentrancyVulnerability", "shortDescription": {"text": "Re-Entrancy Vulnerability."}}]}