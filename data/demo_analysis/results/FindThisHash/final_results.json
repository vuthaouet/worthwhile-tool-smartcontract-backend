{"contract": "FindThisHash", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 0, "list_vulnerabilities": ["ArithmeticVulnerability", "AccessControlVulnerability"], "rules": [{"id": "Arithmetic_4", "fullDescription": {"text": "A possible integer overflow exists in the function `solve(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow"}}, {"id": "AccessControl_13", "fullDescription": {"text": "In the function `solve(string)` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions."}, "name": "AccessControlVulnerability", "shortDescription": {"text": "Ether send"}}, {"id": "AccessControl_19", "fullDescription": {"text": "FindThisHash.solve (/data/demo_analysis/source_code/FindThisHash.sol#14-19) sends eth to arbitrary user\n\tDangerous calls:\n\t- msg.sender.transfer(1000000000000000000000) (/data/demo_analysis/source_code/FindThisHash.sol#18)\n"}, "name": "AccessControlVulnerability", "shortDescription": {"text": "arbitrary-send"}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}], "listLine": [14, 18], "analysis": {"14": [{"level": "warning", "tool": ["mythril", "oyente"], "snippet": {"text": "function solve(string solution) public {\n        // If you can find the pre image of the hash, receive 1000 ether\n         // <yes> <report> FRONT_RUNNING\n        require(hash == sha3(solution));\n        msg.sender.transfer(1000 ether);\n    }"}, "fullDescription": "A possible integer overflow exists in the function `solve(string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "error", "tool": ["slither"], "fullDescription": "FindThisHash.solve (/data/demo_analysis/source_code/FindThisHash.sol#14-19) sends eth to arbitrary user\n\tDangerous calls:\n\t- msg.sender.transfer(1000000000000000000000) (/data/demo_analysis/source_code/FindThisHash.sol#18)\n", "name": "AccessControlVulnerability"}], "18": [{"level": "warning", "tool": ["mythril", "slither"], "snippet": {"text": "msg.sender.transfer(1000 ether)"}, "fullDescription": "In the function `solve(string)` a non-zero amount of Ether is sent to msg.sender.\nIt seems that this function can be called without restrictions.", "name": "AccessControlVulnerability"}]}, "count_vulnerabilities": {"ArithmeticVulnerability": 1, "AccessControlVulnerability": 2}, "count_leve_vulnerabilities": {"warning": 2, "error": 1, "note": 0, "none": 0}, "false_positives": 0}