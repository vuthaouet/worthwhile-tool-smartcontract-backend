{
  "contract": "0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e",
  "tool": "mythril",
  "start": 1640185847.408484,
  "end": 1640185856.0925455,
  "duration": 8.684061527252197,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 426,
        "code": "     {\n                balan",
        "debug": "",
        "description": "This contract executes a message call to the address of the transaction sender. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/data/demo_analysis/source_code/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol",
        "function": "CashOut(uint256)",
        "lineno": 39,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 426,
        "code": "     {\n                balan",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 768\n",
        "filename": "/data/demo_analysis/source_code/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol",
        "function": "CashOut(uint256)",
        "lineno": 39,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 768,
        "code": "ashOut\");\n            }\n        }\n    }\n    \n   ",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/data/demo_analysis/source_code/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol",
        "function": "CashOut(uint256)",
        "lineno": 41,
        "title": "Message call to external contract",
        "type": "Informational"
      },
      {
        "address": 874,
        "code": "alue;\n            TransferLog.A",
        "debug": "storage_keccac_1461501637330902918203684832716283019655932542975_&\n1461501637330902918203684832716283019655932542975_&\ncaller: 0x6fa613b31105f33968dfdfd25de19aceb682c10d6428182e2082d401048be3f8\ncallvalue: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\nstorage_1: 0xff8dd1180277f6048eff0ba68dfa1b212642db55a4c1650e814d13480aebfbdb\ncalldata_PrivateBank_0: 0xed21248c00000000000000000000000000000000000000000000000000000000\ncalldatasize_PrivateBank: 0x4\n",
        "description": "A possible integer overflow exists in the function `Deposit()`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.",
        "filename": "/data/demo_analysis/source_code/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol",
        "function": "Deposit()",
        "lineno": 28,
        "title": "Integer Overflow ",
        "type": "Warning"
      },
      {
        "address": 1138,
        "code": "ender,msg.value,\"Deposit\");\n        }\n    }\n    \n    f",
        "debug": "",
        "description": "This contract executes a message call to to another contract. Make sure that the called contract is trusted and does not execute user-supplied code.",
        "filename": "/data/demo_analysis/source_code/0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol",
        "function": "Deposit()",
        "lineno": 29,
        "title": "Message call to external contract",
        "type": "Informational"
      }
    ],
    "success": true
  }
}