{"error": null, "issues": [{"address": 136, "code": "ddress contract_address,address[] tos,uint[] vs)\n        public \n        validAddress(contract_address)\n        returns (bool){\n\n        require(tos.length > 0);\n        require(vs.length > 0);\n        require(tos.length == vs.length);\n        bytes4 id = bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i = 0 ; i < tos.length; i++){\n            // <yes> <report> UNCHECKED_LL_CALLS\n            contract_address.call(id, msg.sender, tos[i], vs[i]);\n        }\n        return true;\n    }\n}", "debug": "calldata_AirDropContract_32 + 4: 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\ncalldata_AirDropContract_0: 0x72a503be00000000000000000000000000000000000000000000000000000000\ncalldatasize_AirDropContract: 0x4\ncallvalue: 0x0\n", "description": "A possible integer overflow exists in the function `_function_0x72a503be`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "filename": "/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol", "function": "_function_0x72a503be", "lineno": 20, "title": "Integer Overflow ", "type": "Warning"}, {"address": 853, "code": "sender, tos[i], vs[i]);\n        }\n        return tru", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol", "function": "_function_0x72a503be", "lineno": 31, "title": "Message call to external contract", "type": "Warning"}, {"address": 853, "code": "sender, tos[i], vs[i]);\n        }\n        return tru", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 853\nCall at address: 853\n", "filename": "/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol", "function": "_function_0x72a503be", "lineno": 31, "title": "Multiple Calls", "type": "Information"}, {"address": 853, "code": "sender, tos[i], vs[i]);\n        }\n        return tru", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol", "function": "_function_0x72a503be", "lineno": 31, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}