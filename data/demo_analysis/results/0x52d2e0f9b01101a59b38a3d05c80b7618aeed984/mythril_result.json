{
  "contract": "0x52d2e0f9b01101a59b38a3d05c80b7618aeed984",
  "tool": "mythril",
  "start": 1640178454.5538993,
  "end": 1640178463.0478063,
  "duration": 8.49390697479248,
  "analysis": {
    "error": null,
    "issues": [
      {
        "address": 314,
        "code": "        }\n    }\n}",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "getTokens(uint256,address)",
        "lineno": 28,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 314,
        "code": "        }\n    }\n}",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 314\nCall at address: 314\nCall at address: 314\nCall at address: 314\nCall at address: 314\nCall at address: 314\nCall at address: 314\nCall at address: 314\n",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "getTokens(uint256,address)",
        "lineno": 28,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 314,
        "code": "        }\n    }\n}",
        "debug": "",
        "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "getTokens(uint256,address)",
        "lineno": 28,
        "title": "Unchecked CALL return value",
        "type": "Informational"
      },
      {
        "address": 562,
        "code": ");\n    }\n    funct",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "withdrawTokens(address)",
        "lineno": 19,
        "title": "Message call to external contract",
        "type": "Warning"
      },
      {
        "address": 562,
        "code": ");\n    }\n    funct",
        "debug": "",
        "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 754\n",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "withdrawTokens(address)",
        "lineno": 19,
        "title": "Multiple Calls",
        "type": "Information"
      },
      {
        "address": 754,
        "code": " tc.balanceOf(this));\n    }\n    functi",
        "debug": "",
        "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.",
        "filename": "/data/demo_analysis/source_code/0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol",
        "function": "withdrawTokens(address)",
        "lineno": 19,
        "title": "Message call to external contract",
        "type": "Warning"
      }
    ],
    "success": true
  }
}