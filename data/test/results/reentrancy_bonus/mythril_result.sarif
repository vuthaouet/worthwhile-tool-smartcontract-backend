{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Mythril",
          "fullDescription": {
            "text": "Mythril analyses EVM bytecode using symbolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities."
          },
          "informationUri": "https://mythx.io/",
          "rules": [
            {
              "id": "Reentrancy_4",
              "fullDescription": {
                "text": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities."
              },
              "name": "ReentrancyVulnerability",
              "shortDescription": {
                "text": "State change after external call"
              }
            },
            {
              "id": "AccessControl_13",
              "fullDescription": {
                "text": "In the function `withdrawReward(address)` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions."
              },
              "name": "AccessControlVulnerability",
              "shortDescription": {
                "text": "Ether send"
              }
            },
            {
              "id": "Reentrancy_3",
              "fullDescription": {
                "text": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state."
              },
              "name": "ReentrancyVulnerability",
              "shortDescription": {
                "text": "Message call to external contract"
              }
            }
          ],
          "version": "0.4.25"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "data/test/source_code/reentrancy_bonus.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "getFirstWithdrawalBonus(address)"
        },
        {
          "kind": "function",
          "name": "withdrawReward(address)"
        }
      ],
      "results": [
        {
          "message": {
            "text": "State change after external call"
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "getFirstWithdrawalBonus(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/test/source_code/reentrancy_bonus.sol"
                },
                "region": {
                  "snippet": {
                    "text": "claimedBonus[recipient] = true"
                  },
                  "startLine": 29
                }
              }
            }
          ],
          "ruleId": "Reentrancy_4"
        },
        {
          "message": {
            "text": "Ether send"
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "withdrawReward(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/test/source_code/reentrancy_bonus.sol"
                },
                "region": {
                  "snippet": {
                    "text": "recipient.call.value(amountToWithdraw)(\"\")"
                  },
                  "startLine": 19
                }
              }
            }
          ],
          "ruleId": "AccessControl_13"
        },
        {
          "message": {
            "text": "Message call to external contract"
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "withdrawReward(address)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/test/source_code/reentrancy_bonus.sol"
                },
                "region": {
                  "snippet": {
                    "text": "recipient.call.value(amountToWithdraw)(\"\")"
                  },
                  "startLine": 19
                }
              }
            }
          ],
          "ruleId": "Reentrancy_3"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json"
}