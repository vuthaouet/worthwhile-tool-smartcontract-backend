{"contract": "wallet_04_confused_sign", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 2, "list_vulnerabilities": ["ArithmeticVulnerability", "OtherVulnerability"], "rules": [{"id": "Arithmetic_5", "fullDescription": {"text": "A possible integer underflow exists in the function `withdraw(uint256)`.\nThe subtraction may result in a value < 0."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow"}}, {"id": "Other_9", "fullDescription": {"text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "}, "name": "OtherVulnerability", "shortDescription": {"text": "Exception state"}}, {"id": "Arithmetic_12", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow."}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}], "listLine": [32, 24], "analysis": {"32": [{"level": "warning", "tool": ["mythril", "oyente"], "snippet": {"text": "balances[msg.sender] -= amount"}, "fullDescription": "A possible integer underflow exists in the function `withdraw(uint256)`.\nThe subtraction may result in a value < 0.", "name": "ArithmeticVulnerability"}], "24": [{"level": "note", "tool": ["mythril"], "snippet": {"text": "assert(balances[msg.sender] + msg.value > balances[msg.sender])"}, "fullDescription": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "name": "OtherVulnerability", "flag": "risk of false positives"}, {"level": "warning", "tool": ["oyente"], "name": "ArithmeticVulnerability", "flag": "risk of false positives"}]}, "count_vulnerabilities": {"ArithmeticVulnerability": 2, "OtherVulnerability": 1}, "count_leve_vulnerabilities": {"warning": 2, "error": 0, "note": 1, "none": 0}, "false_positives": 0}