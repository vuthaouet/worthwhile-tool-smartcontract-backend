{"contract": "0xa1fceeff3acc57d257b917e30c4df661401d6431", "sourceLanguage": "Solidity", "analysis": {"20": [{"level": "warning", "tool": ["mythril", "oyente"], "snippet": {"text": "ddress contract_address,address[] tos,uint[] vs)\n        public \n        validAddress(contract_address)\n        returns (bool){\n\n        require(tos.length > 0);\n        require(vs.length > 0);\n        require(tos.length == vs.length);\n        bytes4 id = bytes4(keccak256(\"transferFrom(address,address,uint256)\"));\n        for(uint i = 0 ; i < tos.length; i++){\n            // <yes> <report> UNCHECKED_LL_CALLS\n            contract_address.call(id, msg.sender, tos[i], vs[i]);\n        }\n        return true;\n    }\n}"}, "fullDescription": "A possible integer overflow exists in the function `_function_0x72a503be`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "warning", "tool": ["slither"], "fullDescription": "AirDropContract.transfer has external calls inside a loop:\n\t- contract_address.call(id,msg.sender,tos[i],vs[i]) (/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31-33)\n", "name": "DenialServiceVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in AirDropContract.transfer (/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-35):\n\t-contract_address.call(id,msg.sender,tos[i],vs[i]) /data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31-33\n", "name": "UncheckedLowCallsVulnerability"}], "31": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "sender, tos[i], vs[i]);\n        }\n        return tru"}, "fullDescription": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "name": "ReentrancyVulnerability"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 853\nCall at address: 853\n", "name": "OtherVulnerability"}, {"level": "note", "tool": ["mythril", "slither"], "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}, {"level": "warning", "tool": ["slither", "oyente"], "fullDescription": "AirDropContract.transfer has external calls inside a loop:\n\t- contract_address.call(id,msg.sender,tos[i],vs[i]) (/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31-33)\n", "name": "DenialServiceVulnerability"}]}, "listLine": [20, 31], "rules": [{"id": "Arithmetic_4", "fullDescription": {"text": "A possible integer overflow exists in the function `_function_0x72a503be`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow"}}, {"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "Other_10", "fullDescription": {"text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 853\nCall at address: 853\n"}, "name": "OtherVulnerability", "shortDescription": {"text": "Multiple Calls"}}, {"id": "UncheckedLowCalls_3", "fullDescription": {"text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "Unchecked CALL return value"}}, {"id": "DenialService_3", "fullDescription": {"text": "AirDropContract.transfer has external calls inside a loop:\n\t- contract_address.call(id,msg.sender,tos[i],vs[i]) (/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31-33)\n"}, "name": "DenialServiceVulnerability", "shortDescription": {"text": "calls-loop"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in AirDropContract.transfer (/data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#20-35):\n\t-contract_address.call(id,msg.sender,tos[i],vs[i]) /data/demo_analysis/source_code/0xa1fceeff3acc57d257b917e30c4df661401d6431.sol#31-33\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}, {"id": "DenialService_2", "name": "DenialServiceVulnerability", "shortDescription": {"text": "Callstack Depth Attack Vulnerability."}}]}