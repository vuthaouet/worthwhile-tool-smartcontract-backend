{
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Mythril",
          "fullDescription": {
            "text": "Mythril analyses EVM bytecode using symbolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities."
          },
          "informationUri": "https://mythx.io/",
          "rules": [
            {
              "id": "Arithmetic_4",
              "fullDescription": {
                "text": "A possible integer overflow exists in the function `AddMessage(address,uint256,string)`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."
              },
              "name": "ArithmeticVulnerability",
              "shortDescription": {
                "text": "Integer Overflow"
              }
            },
            {
              "id": "Other_9",
              "fullDescription": {
                "text": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. "
              },
              "name": "OtherVulnerability",
              "shortDescription": {
                "text": "Exception state"
              }
            }
          ],
          "version": "0.4.25"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
          },
          "sourceLanguage": "Solidity"
        }
      ],
      "logicalLocations": [
        {
          "kind": "function",
          "name": "AddMessage(address,uint256,string)"
        },
        {
          "kind": "function",
          "name": "_function_0xa21f0368"
        }
      ],
      "results": [
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "Msg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}"
                  },
                  "startLine": 90
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        },
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "n.io \n * @author: "
                  },
                  "startLine": 2
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        },
        {
          "message": {
            "text": "Exception state"
          },
          "level": "note",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "_function_0xa21f0368"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "ddress _adr,uint _val,st"
                  },
                  "startLine": 87
                }
              }
            }
          ],
          "ruleId": "Other_9"
        },
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "    string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}"
                  },
                  "startLine": 78
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        },
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "    string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}"
                  },
                  "startLine": 78
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        },
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "    string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}"
                  },
                  "startLine": 78
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        },
        {
          "message": {
            "text": "Integer Overflow "
          },
          "level": "warning",
          "locations": [
            {
              "logicalLocations": [
                {
                  "kind": "function",
                  "name": "AddMessage(address,uint256,string)"
                }
              ],
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/demo_analysis/source_code/0x561eac93c92360949ab1f1403323e6db345cbf31.sol"
                },
                "region": {
                  "snippet": {
                    "text": "    string  Data;\n        uint Val;\n        uint  Time;\n    }\n    \n    Message[] public History;\n    \n    Message LastMsg;\n    \n    function AddMessage(address _adr,uint _val,string _data)\n    public\n    {\n        LastMsg.Sender = _adr;\n        LastMsg.Time = now;\n        LastMsg.Val = _val;\n        LastMsg.Data = _data;\n        History.push(LastMsg);\n    }\n}"
                  },
                  "startLine": 78
                }
              }
            }
          ],
          "ruleId": "Arithmetic_4"
        }
      ]
    }
  ],
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json"
}