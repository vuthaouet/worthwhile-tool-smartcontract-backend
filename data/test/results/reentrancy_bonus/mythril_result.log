{"error": null, "issues": [{"address": 477, "code": "claimedBonus[recipient] = true", "debug": "", "description": "The contract account state is changed after an external call. Consider that the called contract could re-enter the function before this state change takes place. This can lead to business logic vulnerabilities.", "filename": "/data/test/source_code/reentrancy_bonus.sol", "function": "getFirstWithdrawalBonus(address)", "lineno": 29, "title": "State change after external call", "type": "Warning"}, {"address": 665, "code": "recipient.call.value(amountToWithdraw)(\"\")", "debug": "SOLVER OUTPUT:\ncalldata_Reentrancy_bonus_0: 0xb86e321c00000000000000000000000000000000000000000000000000000000\ncalldatasize_Reentrancy_bonus: 0x4\ncallvalue: 0x0\n", "description": "In the function `withdrawReward(address)` a non-zero amount of Ether is sent to an address taken from function arguments.\nIt seems that this function can be called without restrictions.", "filename": "/data/test/source_code/reentrancy_bonus.sol", "function": "withdrawReward(address)", "lineno": 19, "title": "Ether send", "type": "Warning"}, {"address": 665, "code": "recipient.call.value(amountToWithdraw)(\"\")", "debug": "", "description": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "filename": "/data/test/source_code/reentrancy_bonus.sol", "function": "withdrawReward(address)", "lineno": 19, "title": "Message call to external contract", "type": "Warning"}], "success": true}