{"contract": "governmental_survey", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 8, "list_vulnerabilities": ["OtherVulnerability", "AccessControlVulnerability", "FrontRunningVulnerability", "UncheckedLowCallsVulnerability", "ArithmeticVulnerability", "TimeManipulationVulnerability"], "rules": [{"id": "Other_7", "fullDescription": {"text": "In the function `resetInvestment()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n"}, "name": "OtherVulnerability", "shortDescription": {"text": "Dependence on predictable environment variable"}}, {"id": "AccessControl_13", "fullDescription": {"text": "In the function `resetInvestment()` a non-zero amount of Ether is sent to an address taken from storage slot 1.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `resetInvestment()`.\n\nThere is a check on storage index 3. This storage slot can be written to by calling the function `resetInvestment()`."}, "name": "AccessControlVulnerability", "shortDescription": {"text": "Ether send"}}, {"id": "Other_10", "fullDescription": {"text": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 708\n"}, "name": "OtherVulnerability", "shortDescription": {"text": "Multiple Calls"}}, {"id": "FrontRunning_1", "fullDescription": {"text": "A possible transaction order independence vulnerability exists in function resetInvestment(). The value or direction of the call statement is determined from a tainted storage location"}, "name": "FrontRunningVulnerability", "shortDescription": {"text": "Transaction order dependence"}}, {"id": "UncheckedLowCalls_3", "fullDescription": {"text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "Unchecked CALL return value"}}, {"id": "AccessControl_19", "fullDescription": {"text": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) sends eth to arbitrary user\n\tDangerous calls:\n\t- owner.send(this.balance - 1000000000000000000) (/data/demo_analysis/source_code/governmental_survey.sol#35)\n"}, "name": "AccessControlVulnerability", "shortDescription": {"text": "arbitrary-send"}}, {"id": "TimeManipulation_4", "fullDescription": {"text": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < lastInvestmentTimestamp + ONE_MINUTE (/data/demo_analysis/source_code/governmental_survey.sol#31-32)\n"}, "name": "TimeManipulationVulnerability", "shortDescription": {"text": "timestamp"}}, {"id": "Arithmetic_12", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Underflow."}}], "listLine": [34, 35, 30, 31], "analysis": {"34": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "lastInvestor.send(jackpot)"}, "fullDescription": "In the function `resetInvestment()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "name": "OtherVulnerability", "flag": "risk of false positives"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "In the function `resetInvestment()` a non-zero amount of Ether is sent to an address taken from storage slot 1.\nThere is a check on storage index 1. This storage slot can be written to by calling the function `resetInvestment()`.\n\nThere is a check on storage index 3. This storage slot can be written to by calling the function `resetInvestment()`.", "name": "AccessControlVulnerability"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "A possible transaction order independence vulnerability exists in function resetInvestment(). The value or direction of the call statement is determined from a tainted storage location", "name": "FrontRunningVulnerability", "flag": "risk of false positives"}, {"level": "note", "tool": ["mythril"], "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability", "flag": "risk of false positives"}], "35": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "owner.send(this.balance-1 ether)"}, "fullDescription": "In the function `resetInvestment()` the following predictable state variables are used to determine Ether recipient:\n- block.timestamp\n", "name": "OtherVulnerability", "flag": "risk of false positives"}, {"level": "note", "tool": ["mythril"], "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability", "flag": "risk of false positives"}, {"level": "error", "tool": ["slither"], "fullDescription": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) sends eth to arbitrary user\n\tDangerous calls:\n\t- owner.send(this.balance - 1000000000000000000) (/data/demo_analysis/source_code/governmental_survey.sol#35)\n", "name": "AccessControlVulnerability"}, {"level": "warning", "tool": ["oyente"], "name": "ArithmeticVulnerability", "flag": "risk of false positives"}], "30": [{"level": "error", "tool": ["slither"], "fullDescription": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) sends eth to arbitrary user\n\tDangerous calls:\n\t- owner.send(this.balance - 1000000000000000000) (/data/demo_analysis/source_code/governmental_survey.sol#35)\n", "name": "AccessControlVulnerability"}, {"level": "warning", "tool": ["slither"], "fullDescription": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < lastInvestmentTimestamp + ONE_MINUTE (/data/demo_analysis/source_code/governmental_survey.sol#31-32)\n", "name": "TimeManipulationVulnerability", "flag": "risk of false positives"}], "31": [{"level": "warning", "tool": ["slither"], "snippet": {"text": "block.timestamp < lastInvestmentTimestamp + ONE_MINUTE"}, "fullDescription": "Governmental.resetInvestment (/data/demo_analysis/source_code/governmental_survey.sol#30-40) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < lastInvestmentTimestamp + ONE_MINUTE (/data/demo_analysis/source_code/governmental_survey.sol#31-32)\n", "name": "TimeManipulationVulnerability", "flag": "risk of false positives"}]}, "count_vulnerabilities": {"OtherVulnerability": 2, "AccessControlVulnerability": 3, "FrontRunningVulnerability": 1, "UncheckedLowCallsVulnerability": 2, "ArithmeticVulnerability": 1, "TimeManipulationVulnerability": 2}, "count_leve_vulnerabilities": {"warning": 7, "error": 2, "note": 2, "none": 0}, "false_positives": 0}