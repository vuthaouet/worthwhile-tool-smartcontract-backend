{"contract": "0x610495793564aed0f9c7fc48dc4c7c9151d34fd6", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 2, "list_vulnerabilities": ["ArithmeticVulnerability", "UncheckedLowCallsVulnerability", "ReentrancyVulnerability", "DenialServiceVulnerability"], "rules": [{"id": "Arithmetic_4", "fullDescription": {"text": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer."}, "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow"}}, {"id": "Reentrancy_3", "fullDescription": {"text": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state."}, "name": "ReentrancyVulnerability", "shortDescription": {"text": "Message call to external contract"}}, {"id": "UncheckedLowCalls_3", "fullDescription": {"text": "The return value of an external call is not checked. Note that execution continue even if the called contract throws."}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "Unchecked CALL return value"}}, {"id": "UncheckedLowCalls_5", "fullDescription": {"text": "Low level call in SimpleWallet.sendMoney (/data/demo_analysis/source_code/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31-35):\n\t-_target.call.value(_value)(_data) /data/demo_analysis/source_code/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#33-35\n"}, "name": "UncheckedLowCallsVulnerability", "shortDescription": {"text": "low-level-calls"}}, {"id": "Arithmetic_11", "name": "ArithmeticVulnerability", "shortDescription": {"text": "Integer Overflow."}}, {"id": "DenialService_2", "name": "DenialServiceVulnerability", "shortDescription": {"text": "Callstack Depth Attack Vulnerability."}}], "listLine": [21, 31, 33, 20], "analysis": {"21": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "  }\n    \n    fu"}, "fullDescription": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}], "31": [{"level": "warning", "tool": ["mythril", "oyente"], "snippet": {"text": "rget, uint _value, bytes _data) public onlyOwner {\n        // <yes> <report> UNCHECKED_LL_CALLS\n        _target.call.value(_value)(_data);\n    }\n}"}, "fullDescription": "A possible integer overflow exists in the function `fallback`.\nThe addition or multiplication may result in a value higher than the maximum representable integer.", "name": "ArithmeticVulnerability"}, {"level": "note", "tool": ["slither"], "fullDescription": "Low level call in SimpleWallet.sendMoney (/data/demo_analysis/source_code/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#31-35):\n\t-_target.call.value(_value)(_data) /data/demo_analysis/source_code/0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol#33-35\n", "name": "UncheckedLowCallsVulnerability"}], "33": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": ");\n    }\n}"}, "fullDescription": "This contract executes a message call to an address provided as a function argument. Generally, it is not recommended to call user-supplied addresses using Solidity's call() construct. Note that attackers might leverage reentrancy attacks to exploit race conditions or manipulate this contract's state.", "name": "ReentrancyVulnerability"}, {"level": "note", "tool": ["mythril", "slither"], "fullDescription": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "name": "UncheckedLowCallsVulnerability"}, {"level": "warning", "tool": ["oyente"], "name": "DenialServiceVulnerability", "flag": "risk of false positives"}], "20": [{"level": "warning", "tool": ["oyente"], "snippet": {}, "name": "ArithmeticVulnerability", "flag": "risk of false positives"}]}, "count_vulnerabilities": {"ArithmeticVulnerability": 3, "UncheckedLowCallsVulnerability": 2, "ReentrancyVulnerability": 1, "DenialServiceVulnerability": 1}, "count_leve_vulnerabilities": {"warning": 5, "error": 0, "note": 2, "none": 0}, "false_positives": 0}