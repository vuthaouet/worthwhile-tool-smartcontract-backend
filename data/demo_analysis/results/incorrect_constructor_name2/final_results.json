{"contract": "incorrect_constructor_name2", "sourceLanguage": "Solidity", "count_risk_of_false_positives": 1, "list_vulnerabilities": ["AccessControlVulnerability", "FrontRunningVulnerability"], "rules": [{"id": "AccessControl_13", "fullDescription": {"text": "In the function `withdraw()` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `missing()`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `missing()`."}, "name": "AccessControlVulnerability", "shortDescription": {"text": "Ether send"}}, {"id": "FrontRunning_1", "fullDescription": {"text": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location"}, "name": "FrontRunningVulnerability", "shortDescription": {"text": "Transaction order dependence"}}], "listLine": [30], "analysis": {"30": [{"level": "warning", "tool": ["mythril"], "snippet": {"text": "owner.transfer(this.balance)"}, "fullDescription": "In the function `withdraw()` a non-zero amount of Ether is sent to an address taken from storage slot 0.\nThere is a check on storage index 0. This storage slot can be written to by calling the function `missing()`.\n\nThere is a check on storage index 0. This storage slot can be written to by calling the function `missing()`.", "name": "AccessControlVulnerability"}, {"level": "warning", "tool": ["mythril"], "fullDescription": "A possible transaction order independence vulnerability exists in function withdraw(). The value or direction of the call statement is determined from a tainted storage location", "name": "FrontRunningVulnerability", "flag": "risk of false positives"}]}, "count_vulnerabilities": {"AccessControlVulnerability": 1, "FrontRunningVulnerability": 1}, "count_leve_vulnerabilities": {"warning": 2, "error": 0, "note": 0, "none": 0}, "false_positives": 0}